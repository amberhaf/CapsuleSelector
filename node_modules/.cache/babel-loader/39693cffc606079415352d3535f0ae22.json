{"ast":null,"code":"'use strict';\n\nmodule.exports = {};\n\nmodule.exports.formatDate = function formatDate(d, dateonly, floating) {\n  var s;\n\n  function pad(i) {\n    return (i < 10 ? '0' : '') + i;\n  }\n\n  s = d.getUTCFullYear();\n  s += pad(d.getUTCMonth() + 1);\n  s += pad(d.getUTCDate());\n\n  if (!dateonly) {\n    s += 'T';\n    s += pad(d.getUTCHours());\n    s += pad(d.getUTCMinutes());\n    s += pad(d.getUTCSeconds());\n\n    if (!floating) {\n      s += 'Z';\n    }\n  }\n\n  return s;\n}; // For information about this format, see RFC 5545, section 3.3.5\n// https://tools.ietf.org/html/rfc5545#section-3.3.5\n\n\nmodule.exports.formatDateTZ = function formatDateTZ(property, date, eventData) {\n  var tzParam = '',\n      floating = eventData.floating;\n\n  if (eventData.timezone) {\n    tzParam = ';TZID=' + eventData.timezone; // This isn't a 'floating' event because it has a timezone;\n    // but we use it to omit the 'Z' UTC specifier in formatDate()\n\n    floating = true;\n  }\n\n  return property + tzParam + ':' + module.exports.formatDate(date, false, floating);\n};\n\nmodule.exports.escape = function escape(str) {\n  return str.replace(/[\\\\;,\"]/g, function (match) {\n    return '\\\\' + match;\n  }).replace(/(?:\\r\\n|\\r|\\n)/g, '\\\\n');\n};\n\nmodule.exports.duration = function duration(seconds) {\n  var string = ''; // < 0\n\n  if (seconds < 0) {\n    string = '-';\n    seconds *= -1;\n  }\n\n  string += 'P'; // DAYS\n\n  if (seconds >= 86400) {\n    string += Math.floor(seconds / 86400) + 'D';\n    seconds %= 86400;\n  }\n\n  if (!seconds && string.length > 1) {\n    return string;\n  }\n\n  string += 'T'; // HOURS\n\n  if (seconds >= 3600) {\n    string += Math.floor(seconds / 3600) + 'H';\n    seconds %= 3600;\n  } // MINUTES\n\n\n  if (seconds >= 60) {\n    string += Math.floor(seconds / 60) + 'M';\n    seconds %= 60;\n  } // SECONDS\n\n\n  if (seconds > 0) {\n    string += seconds + 'S';\n  } else if (string.length <= 2) {\n    string += '0S';\n  }\n\n  return string;\n};\n\nmodule.exports.toJSON = function (object, attributes, options) {\n  var result = {};\n  options = options || {};\n  options.ignoreAttributes = options.ignoreAttributes || [];\n  options.hooks = options.hooks || {};\n  attributes.forEach(function (attribute) {\n    if (options.ignoreAttributes.indexOf(attribute) !== -1) {\n      return;\n    }\n\n    var value = object[attribute](),\n        newObj;\n\n    if (options.hooks[attribute]) {\n      value = options.hooks[attribute](value);\n    }\n\n    if (!value) {\n      return;\n    }\n\n    result[attribute] = value;\n\n    if (Array.isArray(result[attribute])) {\n      newObj = [];\n      result[attribute].forEach(function (object) {\n        newObj.push(object.toJSON());\n      });\n      result[attribute] = newObj;\n    }\n  });\n  return result;\n};\n\nmodule.exports.foldLines = function (input) {\n  return input.split('\\r\\n').map(function (line) {\n    return line.match(/(.{1,74})/g).join('\\r\\n ');\n  }).join('\\r\\n');\n};","map":null,"metadata":{},"sourceType":"script"}