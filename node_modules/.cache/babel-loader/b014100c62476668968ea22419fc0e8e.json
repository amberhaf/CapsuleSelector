{"ast":null,"code":"'use strict';\n/**\n * @author Sebastian Pekarek\n * @module attendee\n * @constructor ICalAttendee Attendee\n */\n\nvar ICalAttendee = function ICalAttendee(_data, event) {\n  var attributes = ['name', 'email', 'role', 'status', 'type', 'delegatedTo', 'delegatedFrom', 'delegatesFrom', 'delegatesTo'],\n      vars,\n      i,\n      data;\n\n  if (!event) {\n    throw '`event` option required!';\n  }\n\n  vars = {\n    allowed: {\n      role: ['REQ-PARTICIPANT', 'NON-PARTICIPANT'],\n      status: ['ACCEPTED', 'TENTATIVE', 'DECLINED', 'DELEGATED'],\n      type: ['INDIVIDUAL', 'GROUP', 'RESOURCE', 'ROOM', 'UNKNOWN'] // ref: https://tools.ietf.org/html/rfc2445#section-4.2.3\n\n    }\n  };\n  data = {\n    name: null,\n    email: null,\n    status: null,\n    role: 'REQ-PARTICIPANT',\n    type: null,\n    delegatedTo: null,\n    delegatedFrom: null\n  };\n\n  function getAllowedRole(str) {\n    return getAllowedStringFor('role', str);\n  }\n\n  function getAllowedStatus(str) {\n    return getAllowedStringFor('status', str);\n  }\n\n  function getAllowedType(str) {\n    return getAllowedStringFor('type', str);\n  }\n\n  function getAllowedStringFor(type, str) {\n    if (!str || typeof str !== 'string') {\n      throw new Error('Input for `' + type + '` must be a non-empty string. You gave ' + str);\n    }\n\n    str = str.toUpperCase();\n\n    if (vars.allowed[type].indexOf(str) === -1) {\n      throw new Error('`' + type + '` must be one of the following: ' + vars.allowed[type].join(', ') + '!');\n    }\n\n    return str;\n  }\n  /**\n   * Set/Get the attendee's name\n   *\n   * @param name Name\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.name = function (name) {\n    if (name === undefined) {\n      return data.name;\n    }\n\n    data.name = name || null;\n    return this;\n  };\n  /**\n   * Set/Get the attendee's email address\n   *\n   * @param email Email address\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.email = function (email) {\n    if (!email) {\n      return data.email;\n    }\n\n    data.email = email;\n    return this;\n  };\n  /**\n   * Set/Get attendee's role\n   *\n   * @param {String} role\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.role = function (role) {\n    if (role === undefined) {\n      return data.role;\n    }\n\n    data.role = getAllowedRole(role);\n    return this;\n  };\n  /**\n   * Set/Get attendee's status\n   *\n   * @param {String} status\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.status = function (status) {\n    if (status === undefined) {\n      return data.status;\n    }\n\n    if (!status) {\n      data.status = null;\n      return this;\n    }\n\n    data.status = getAllowedStatus(status);\n    return this;\n  };\n  /**\n   * Set/Get attendee's type (a.k.a. CUTYPE)\n   *\n   * @param {String} type\n   * @since 0.2.3\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.type = function (type) {\n    if (type === undefined) {\n      return data.type;\n    }\n\n    if (!type) {\n      data.type = null;\n      return this;\n    }\n\n    data.type = getAllowedType(type);\n    return this;\n  };\n  /**\n   * Set/Get the attendee's delegated-to field\n   *\n   * @param delegatedTo Email address\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.delegatedTo = function (delegatedTo) {\n    if (delegatedTo === undefined) {\n      return data.delegatedTo;\n    }\n\n    if (!delegatedTo) {\n      data.delegatedTo = null;\n\n      if (data.status === 'DELEGATED') {\n        data.status = null;\n      }\n\n      return this;\n    }\n\n    data.delegatedTo = delegatedTo;\n    data.status = 'DELEGATED';\n    return this;\n  };\n  /**\n   * Set/Get the attendee's delegated-from field\n   *\n   * @param delegatedFrom Email address\n   * @since 0.2.0\n   * @returns {ICalAttendee|String}\n   */\n\n\n  this.delegatedFrom = function (delegatedFrom) {\n    if (delegatedFrom === undefined) {\n      return data.delegatedFrom;\n    }\n\n    data.delegatedFrom = delegatedFrom || null;\n    return this;\n  };\n  /**\n   * Create a new attendee this attendee delegates to\n   * and returns this new attendee\n   *\n   * @param {Object} options\n   * @since 0.2.0\n   * @returns {ICalAttendee}\n   */\n\n\n  this.delegatesTo = function (options) {\n    var a = options instanceof ICalAttendee ? options : event.createAttendee(options);\n    this.delegatedTo(a);\n    a.delegatedFrom(this);\n    return a;\n  };\n  /**\n   * Create a new attendee this attendee delegates from\n   * and returns this new attendee\n   *\n   * @param {Object} options\n   * @since 0.2.0\n   * @returns {ICalAttendee}\n   */\n\n\n  this.delegatesFrom = function (options) {\n    var a = options instanceof ICalAttendee ? options : event.createAttendee(options);\n    this.delegatedFrom(a);\n    a.delegatedTo(this);\n    return a;\n  };\n  /**\n   * Export calender as JSON Object to use it laterâ€¦\n   *\n   * @since 0.2.4\n   * @returns Object Calendar\n   */\n\n\n  this.toJSON = function () {\n    var tools = require('./_tools.js');\n\n    return tools.toJSON(this, attributes, {\n      ignoreAttributes: ['delegatesTo', 'delegatesFrom'],\n      hooks: {\n        delegatedTo: function delegatedTo(value) {\n          return value instanceof ICalAttendee ? value.email() : value;\n        },\n        delegatedFrom: function delegatedFrom(value) {\n          return value instanceof ICalAttendee ? value.email() : value;\n        }\n      }\n    });\n  };\n  /**\n   * Export Event to iCal\n   *\n   * @since 0.2.0\n   * @returns {String}\n   */\n\n\n  this.generate = function () {\n    var g = 'ATTENDEE';\n\n    if (!data.email) {\n      throw 'No value for `email` in ICalAttendee given!';\n    } // ROLE\n\n\n    g += ';ROLE=' + data.role; // TYPE\n\n    if (data.type) {\n      g += ';CUTYPE=' + data.type;\n    } // PARTSTAT\n\n\n    if (data.status) {\n      g += ';PARTSTAT=' + data.status;\n    } // DELEGATED-TO\n\n\n    if (data.delegatedTo) {\n      g += ';DELEGATED-TO=\"' + (data.delegatedTo instanceof ICalAttendee ? data.delegatedTo.email() : data.delegatedTo) + '\"';\n    } // DELEGATED-FROM\n\n\n    if (data.delegatedFrom) {\n      g += ';DELEGATED-FROM=\"' + (data.delegatedFrom instanceof ICalAttendee ? data.delegatedFrom.email() : data.delegatedFrom) + '\"';\n    } // CN / Name\n\n\n    if (data.name) {\n      g += ';CN=\"' + data.name + '\"';\n    }\n\n    g += ':MAILTO:' + data.email + '\\r\\n';\n    return g;\n  };\n\n  for (i in _data) {\n    if (_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n      this[i](_data[i]);\n    }\n  }\n};\n\nmodule.exports = ICalAttendee;","map":null,"metadata":{},"sourceType":"script"}