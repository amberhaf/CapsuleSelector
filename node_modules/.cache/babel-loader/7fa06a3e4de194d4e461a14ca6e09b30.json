{"ast":null,"code":"import { addClass, createElement as internalCreateElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Button } from '@syncfusion/ej2-buttons';\n/**\r\n * Initialize ButtonGroup CSS component with specified properties.\r\n * ```html\r\n * <div id='buttongroup'>\r\n * <button></button>\r\n * <button></button>\r\n * <button></button>\r\n * </div>\r\n * ```\r\n * ```typescript\r\n * createButtonGroup('#buttongroup', {\r\n *   cssClass: 'e-outline',\r\n *   buttons: [\r\n *       { content: 'Day' },\r\n *       { content: 'Week' },\r\n *       { content: 'Work Week'}\r\n *   ]\r\n * });\r\n * ```\r\n * @param {string} selector\r\n * @param {CreateButtonGroupModel} options\r\n * @returns HTMLElement\r\n */\n\nexport function createButtonGroup(selector, options, createElement) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var child;\n  var btnElem;\n  var nextChild;\n  var btnModel;\n\n  if (isNullOrUndefined(createElement)) {\n    createElement = internalCreateElement;\n  }\n\n  var wrapper = document.querySelector(selector);\n  addClass([wrapper], ['e-btn-group', 'e-css']);\n  wrapper.setAttribute('role', 'group');\n  var childs = wrapper.children;\n  options.buttons = options.buttons || [];\n\n  for (var i = 0, j = 0; j < childs.length; i++, j++) {\n    child = childs[j];\n    btnModel = options.buttons[i];\n\n    if (btnModel !== null) {\n      if (child.tagName === 'BUTTON') {\n        btnElem = child;\n      } else {\n        btnElem = createElement('label');\n        nextChild = childs[j + 1];\n\n        if (nextChild) {\n          wrapper.insertBefore(btnElem, nextChild);\n        } else {\n          wrapper.appendChild(btnElem);\n        }\n\n        if (child.id) {\n          btnElem.setAttribute('for', child.id);\n        }\n\n        if (btnModel && btnModel.disabled) {\n          child.disabled = true;\n        }\n\n        j++;\n      }\n\n      if (options.cssClass && btnModel && !btnModel.cssClass) {\n        btnModel.cssClass = options.cssClass;\n      }\n\n      new Button(btnModel || {}, btnElem);\n    }\n  }\n\n  return wrapper;\n}","map":null,"metadata":{},"sourceType":"module"}