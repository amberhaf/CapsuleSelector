{"ast":null,"code":"'use strict';\n/**\n * @author Sebastian Pekarek\n * @module alarm\n * @constructor ICalAlarm Alarm\n */\n\nvar ICalAlarm = function ICalAlarm(_data, event) {\n  var attributes = ['type', 'trigger', 'triggerBefore', 'triggerAfter', 'repeat', 'interval', 'attach', 'description'],\n      vars,\n      i,\n      data;\n\n  if (!event) {\n    throw '`event` option required!';\n  }\n\n  vars = {\n    types: ['display', 'audio']\n  };\n  data = {\n    type: null,\n    trigger: null,\n    repeat: null,\n    repeatInterval: null,\n    attach: null,\n    description: null\n  };\n  /**\n   * Set/Get the alarm type\n   *\n   * @param type Type\n   * @since 0.2.1\n   * @returns {ICalAlarm|String}\n   */\n\n  this.type = function (type) {\n    if (type === undefined) {\n      return data.type;\n    }\n\n    if (!type) {\n      data.type = null;\n      return this;\n    }\n\n    if (vars.types.indexOf(type) === -1) {\n      throw '`type` is not correct, must be either `display` or `audio`!';\n    }\n\n    data.type = type;\n    return this;\n  };\n  /**\n   * Set/Get seconds before event to trigger alarm\n   *\n   * @param {Number|Date} trigger Seconds before alarm triggeres\n   * @since 0.2.1\n   * @returns {ICalAlarm|Number|Date}\n   */\n\n\n  this.trigger = function (trigger) {\n    if (trigger === undefined && data.trigger instanceof Date) {\n      return data.trigger;\n    }\n\n    if (trigger === undefined && data.trigger) {\n      return -1 * data.trigger;\n    }\n\n    if (trigger === undefined) {\n      return null;\n    }\n\n    if (!trigger) {\n      data.trigger = null;\n      return this;\n    }\n\n    if (trigger instanceof Date) {\n      data.trigger = trigger;\n      return this;\n    }\n\n    if (typeof trigger === 'number' && isFinite(trigger)) {\n      data.trigger = -1 * trigger;\n      return this;\n    }\n\n    throw '`trigger` is not correct, must be either typeof `Number` or `Date`!';\n  };\n  /**\n   * Set/Get seconds after event to trigger alarm\n   *\n   * @param {Number|Date} trigger Seconds after alarm triggeres\n   * @since 0.2.1\n   * @returns {ICalAlarm|Number|Date}\n   */\n\n\n  this.triggerAfter = function (trigger) {\n    if (trigger === undefined) {\n      return data.trigger;\n    }\n\n    return this.trigger(typeof trigger === 'number' ? -1 * trigger : trigger);\n  };\n  /**\n   * Set/Get seconds before event to trigger alarm\n   *\n   * @param {Number|Date} trigger Seconds before alarm triggeres\n   * @since 0.2.1\n   * @alias trigger\n   * @returns {ICalAlarm|Number|Date}\n   */\n\n\n  this.triggerBefore = this.trigger;\n  /**\n   * Set/Get Alarm Repetitions\n   *\n   * @param {Number} Number of repetitions\n   * @since 0.2.1\n   * @returns {ICalAlarm|Number}\n   */\n\n  this.repeat = function (repeat) {\n    if (repeat === undefined) {\n      return data.repeat;\n    }\n\n    if (!repeat) {\n      data.repeat = null;\n      return this;\n    }\n\n    if (typeof repeat !== 'number' || !isFinite(repeat)) {\n      throw '`repeat` is not correct, must be numeric!';\n    }\n\n    data.repeat = repeat;\n    return this;\n  };\n  /**\n   * Set/Get Repeat Interval\n   *\n   * @param {Number} Interval in seconds\n   * @since 0.2.1\n   * @returns {ICalAlarm|Number|Null}\n   */\n\n\n  this.interval = function (interval) {\n    if (interval === undefined) {\n      return data.interval;\n    }\n\n    if (!interval) {\n      data.interval = null;\n      return this;\n    }\n\n    if (typeof interval !== 'number' || !isFinite(interval)) {\n      throw '`interval` is not correct, must be numeric!';\n    }\n\n    data.interval = interval;\n    return this;\n  };\n  /**\n   * Set/Get Attachment\n   *\n   * @param {Object|String} File-URI or Object\n   * @since 0.2.1\n   * @returns {ICalAlarm|Object}\n   */\n\n\n  this.attach = function (_attach) {\n    if (_attach === undefined) {\n      return data.attach;\n    }\n\n    if (!_attach) {\n      data.attach = null;\n      return this;\n    }\n\n    var attach = null;\n\n    if (typeof _attach === 'string') {\n      attach = {\n        uri: _attach,\n        mime: null\n      };\n    } else if (typeof _attach === 'object') {\n      attach = {\n        uri: _attach.uri,\n        mime: _attach.mime || null\n      };\n    } else {\n      throw '`attach` needs to be a valid formed string or an object. See https://github.com/sebbo2002/ical-generator#attachstringobject-attach';\n    }\n\n    if (!attach.uri) {\n      throw '`attach.uri` is empty!';\n    }\n\n    data.attach = {\n      uri: attach.uri,\n      mime: attach.mime\n    };\n    return this;\n  };\n  /**\n   * Set/Get the alarm description\n   *\n   * @param description Description\n   * @since 0.2.1\n   * @returns {ICalAlarm|String}\n   */\n\n\n  this.description = function (description) {\n    if (description === undefined) {\n      return data.description;\n    }\n\n    if (!description) {\n      data.description = null;\n      return this;\n    }\n\n    data.description = description;\n    return this;\n  };\n  /**\n   * Export calender as JSON Object to use it laterâ€¦\n   *\n   * @since 0.2.4\n   * @returns Object Calendar\n   */\n\n\n  this.toJSON = function () {\n    var tools = require('./_tools.js');\n\n    return tools.toJSON(this, attributes);\n  };\n  /**\n   * Export Event to iCal\n   *\n   * @since 0.2.0\n   * @returns {String}\n   */\n\n\n  this.generate = function () {\n    var tools = require('./_tools.js'),\n        g = 'BEGIN:VALARM\\r\\n';\n\n    if (!data.type) {\n      throw 'No value for `type` in ICalAlarm given!';\n    }\n\n    if (!data.trigger) {\n      throw 'No value for `trigger` in ICalAlarm given!';\n    } // ACTION\n\n\n    g += 'ACTION:' + data.type.toUpperCase() + '\\r\\n';\n\n    if (data.trigger instanceof Date) {\n      g += 'TRIGGER;VALUE=DATE-TIME:' + tools.formatDate(data.trigger) + '\\r\\n';\n    } else if (data.trigger > 0) {\n      g += 'TRIGGER;RELATED=END:' + tools.duration(data.trigger) + '\\r\\n';\n    } else {\n      g += 'TRIGGER:' + tools.duration(data.trigger) + '\\r\\n';\n    } // REPEAT\n\n\n    if (data.repeat && !data.interval) {\n      throw 'No value for `interval` in ICalAlarm given, but required for `repeat`!';\n    }\n\n    if (data.repeat) {\n      g += 'REPEAT:' + data.repeat + '\\r\\n';\n    } // INTERVAL\n\n\n    if (data.interval && !data.repeat) {\n      throw 'No value for `repeat` in ICalAlarm given, but required for `interval`!';\n    }\n\n    if (data.interval) {\n      g += 'DURATION:' + tools.duration(data.interval) + '\\r\\n';\n    } // ATTACH\n\n\n    if (data.type === 'audio' && data.attach && data.attach.mime) {\n      g += 'ATTACH;FMTTYPE=' + data.attach.mime + ':' + data.attach.uri + '\\r\\n';\n    } else if (data.type === 'audio' && data.attach) {\n      g += 'ATTACH;VALUE=URI:' + data.attach.uri + '\\r\\n';\n    } else if (data.type === 'audio') {\n      g += 'ATTACH;VALUE=URI:Basso\\r\\n';\n    } // DESCRIPTION\n\n\n    if (data.type === 'display' && data.description) {\n      g += 'DESCRIPTION:' + tools.escape(data.description) + '\\r\\n';\n    } else if (data.type === 'display') {\n      g += 'DESCRIPTION:' + tools.escape(event.summary()) + '\\r\\n';\n    }\n\n    g += 'END:VALARM\\r\\n';\n    return g;\n  };\n\n  for (i in _data) {\n    if (_data.hasOwnProperty(i) && attributes.indexOf(i) > -1) {\n      this[i](_data[i]);\n    }\n  }\n};\n\nmodule.exports = ICalAlarm;","map":null,"metadata":{},"sourceType":"script"}