{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\79tu4\\\\src\\\\modules\\\\web\\\\pages\\\\dashboard\\\\EventChip.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { DragSource } from 'react-dnd';\nimport BigCalendar from 'react-big-calendar';\nimport Chip from 'material-ui/Chip';\n/* drag sources */\n\nvar eventSource = {\n  beginDrag(props) {\n    return Object.assign({}, {\n      event: props.event\n    }, {\n      anchor: 'drop'\n    });\n  }\n\n};\n\nfunction collectSource(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar propTypes = {\n  connectDragSource: PropTypes.func.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  event: PropTypes.object.isRequired\n};\n\nclass DraggableSidebarEvent extends Component {\n  render() {\n    var _this$props = this.props,\n        connectDragSource = _this$props.connectDragSource,\n        isDragging = _this$props.isDragging,\n        event = _this$props.event;\n    var EventWrapper = BigCalendar.components.eventWrapper;\n    var title = event.title;\n    return /*#__PURE__*/React.createElement(EventWrapper, {\n      event: event,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, connectDragSource( /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        opacity: isDragging ? 0.5 : 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      onClick: () => {\n        this.props.onClickEvent(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, title))));\n  }\n\n}\n\nDraggableSidebarEvent.propTypes = propTypes;\nexport default DragSource('event', eventSource, collectSource)(DraggableSidebarEvent);","map":{"version":3,"sources":["C:/Users/A/79tu4/src/modules/web/pages/dashboard/EventChip.js"],"names":["PropTypes","React","Component","DragSource","BigCalendar","Chip","eventSource","beginDrag","props","Object","assign","event","anchor","collectSource","connect","monitor","connectDragSource","dragSource","isDragging","propTypes","func","isRequired","bool","object","DraggableSidebarEvent","render","EventWrapper","components","eventWrapper","title","opacity","onClickEvent"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAGA;;AACA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,WAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EACL;AAACC,MAAAA,KAAK,EAAEH,KAAK,CAACG;AAAd,KADK,EAGL;AAACC,MAAAA,MAAM,EAAE;AAAT,KAHK,CAAP;AAKD;;AAPe,CAAlB;;AAUA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,SAAO;AACLC,IAAAA,iBAAiB,EAAEF,OAAO,CAACG,UAAR,EADd;AAELC,IAAAA,UAAU,EAAEH,OAAO,CAACG,UAAR;AAFP,GAAP;AAID;;AAED,IAAMC,SAAS,GAAG;AAChBH,EAAAA,iBAAiB,EAAEhB,SAAS,CAACoB,IAAV,CAAeC,UADlB;AAEhBH,EAAAA,UAAU,EAAElB,SAAS,CAACsB,IAAV,CAAeD,UAFX;AAGhBV,EAAAA,KAAK,EAAEX,SAAS,CAACuB,MAAV,CAAiBF;AAHR,CAAlB;;AAMA,MAAMG,qBAAN,SAAoCtB,SAApC,CAA8C;AAG5CuB,EAAAA,MAAM,GAAG;AAAA,sBACsC,KAAKjB,KAD3C;AAAA,QACFQ,iBADE,eACFA,iBADE;AAAA,QACiBE,UADjB,eACiBA,UADjB;AAAA,QAC6BP,KAD7B,eAC6BA,KAD7B;AAEP,QAAIe,YAAY,GAAGtB,WAAW,CAACuB,UAAZ,CAAuBC,YAA1C;AAFO,QAGFC,KAHE,GAGOlB,KAHP,CAGFkB,KAHE;AAMP,wBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAElB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,iBAAiB,eAAC;AAAK,MAAA,KAAK,EAAE;AAACc,QAAAA,OAAO,EAAEZ,UAAU,GAAG,GAAH,GAAS;AAA7B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACjB,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,MAAI;AAAC,aAAKV,KAAL,CAAWuB,YAAX,CAAwBpB,KAAxB;AAA+B,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEkB,KADF,CADiB,CAAD,CADpB,CADF;AASD;;AAlB2C;;AAqB9CL,qBAAqB,CAACL,SAAtB,GAAkCA,SAAlC;AAGA,eAAehB,UAAU,CAAC,OAAD,EAAUG,WAAV,EAAuBO,aAAvB,CAAV,CAAgDW,qBAAhD,CAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react'\r\nimport { DragSource } from 'react-dnd';\r\nimport BigCalendar from 'react-big-calendar'\r\nimport Chip from 'material-ui/Chip';\r\n\r\n\r\n/* drag sources */\r\nlet eventSource = {\r\n  beginDrag(props) {\r\n    return Object.assign({},\r\n      {event: props.event},\r\n\r\n      {anchor: 'drop'}\r\n    )\r\n  }\r\n}\r\n\r\nfunction collectSource(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\n\r\nconst propTypes = {\r\n  connectDragSource: PropTypes.func.isRequired,\r\n  isDragging: PropTypes.bool.isRequired,\r\n  event: PropTypes.object.isRequired\r\n}\r\n\r\nclass DraggableSidebarEvent extends Component {\r\n\r\n\r\n  render() {\r\n    let {connectDragSource, isDragging, event} = this.props;\r\n    let EventWrapper = BigCalendar.components.eventWrapper;\r\n    let {title} = event;\r\n\r\n\r\n    return (\r\n      <EventWrapper event={event}>\r\n        {connectDragSource(<div style={{opacity: isDragging ? 0.5 : 1}}>\r\n          <Chip onClick={()=>{this.props.onClickEvent(event)}}\r\n          >{title}</Chip>\r\n        </div>)}\r\n      </EventWrapper>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nDraggableSidebarEvent.propTypes = propTypes;\r\n\r\n\r\nexport default DragSource('event', eventSource, collectSource)(DraggableSidebarEvent);\r\n"]},"metadata":{},"sourceType":"module"}