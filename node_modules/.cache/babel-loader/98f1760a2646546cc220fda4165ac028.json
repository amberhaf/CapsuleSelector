{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A\\\\79tu4\\\\src\\\\pages\\\\time.js\";\nimport * as React from 'react';\nimport * as ReactDOM from \"react-dom\";\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\n\nclass Time extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.calendarId = '5105trob9dasha31vuqek6qgp0@group.calendar.google.com';\n    this.publicKey = 'AIzaSyD76zjMDsL_jkenM5AAnNsORypS1Icuqxg';\n    this.dataManger = new DataManager({\n      url: 'https://www.googleapis.com/calendar/v3/calendars/' + this.calendarId + '/events?key=' + this.publicKey,\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n  }\n\n  onDataBinding(e) {\n    var items = e.result.items;\n    var scheduleData = [];\n\n    if (items.length > 0) {\n      for (var i = 0; i < items.length; i++) {\n        var event = items[i];\n        var when = event.start.dateTime;\n        var start = event.start.dateTime;\n        var end = event.end.dateTime;\n\n        if (!when) {\n          when = event.start.date;\n          start = event.start.date;\n          end = event.end.date;\n        }\n\n        scheduleData.push({\n          Id: event.id,\n          Subject: event.summary,\n          StartTime: new Date(start),\n          EndTime: new Date(end),\n          IsAllDay: !event.start.dateTime\n        });\n      }\n    }\n\n    e.result = scheduleData;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ScheduleComponent, {\n      ref: schedule => this.scheduleObj = schedule,\n      width: \"100%\",\n      height: \"550px\",\n      selectedDate: new Date(2018, 10, 14),\n      readonly: true,\n      eventSettings: {\n        dataSource: this.dataManger\n      },\n      dataBinding: this.onDataBinding.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, WorkWeek, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/A/79tu4/src/pages/time.js"],"names":["React","ReactDOM","ScheduleComponent","Day","Week","WorkWeek","Month","Agenda","Inject","DataManager","WebApiAdaptor","Time","Component","constructor","arguments","calendarId","publicKey","dataManger","url","adaptor","crossDomain","onDataBinding","e","items","result","scheduleData","length","i","event","when","start","dateTime","end","date","push","Id","id","Subject","summary","StartTime","Date","EndTime","IsAllDay","render","schedule","scheduleObj","dataSource","bind"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\r\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\r\nclass Time extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.calendarId = '5105trob9dasha31vuqek6qgp0@group.calendar.google.com';\r\n        this.publicKey = 'AIzaSyD76zjMDsL_jkenM5AAnNsORypS1Icuqxg';\r\n        this.dataManger = new DataManager({\r\n            url: 'https://www.googleapis.com/calendar/v3/calendars/' + this.calendarId + '/events?key=' + this.publicKey,\r\n            adaptor: new WebApiAdaptor,\r\n            crossDomain: true\r\n        });\r\n    }\r\n    onDataBinding(e) {\r\n        let items = e.result.items;\r\n        let scheduleData = [];\r\n        if (items.length > 0) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let event = items[i];\r\n                let when = event.start.dateTime;\r\n                let start = event.start.dateTime;\r\n                let end = event.end.dateTime;\r\n                if (!when) {\r\n                    when = event.start.date;\r\n                    start = event.start.date;\r\n                    end = event.end.date;\r\n                }\r\n                scheduleData.push({\r\n                    Id: event.id,\r\n                    Subject: event.summary,\r\n                    StartTime: new Date(start),\r\n                    EndTime: new Date(end),\r\n                    IsAllDay: !event.start.dateTime\r\n                });\r\n            }\r\n        }\r\n        e.result = scheduleData;\r\n    }\r\n    render() {\r\n        return <ScheduleComponent ref={schedule => this.scheduleObj = schedule} width='100%' height='550px' selectedDate={new Date(2018, 10, 14)} readonly={true} eventSettings={{ dataSource: this.dataManger }} dataBinding={this.onDataBinding.bind(this)}>\r\n      <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\r\n    </ScheduleComponent>;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}