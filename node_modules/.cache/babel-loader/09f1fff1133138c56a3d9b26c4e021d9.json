{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = withDragAndDrop;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDnd = require('react-dnd');\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _propTypes3 = require('../../utils/propTypes');\n\nvar _DraggableEventWrapper = require('./DraggableEventWrapper');\n\nvar _DraggableEventWrapper2 = _interopRequireDefault(_DraggableEventWrapper);\n\nvar _DropWrappers = require('./DropWrappers');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar html5Backend = void 0;\n\ntry {\n  html5Backend = require('react-dnd-html5-backend');\n} catch (err) {}\n/* optional dep missing */\n\n/**\n * Creates a higher-order component (HOC) supporting drag & drop and optionally resizing\n * of events:\n *\n * ```js\n *    import Calendar from 'react-big-calendar'\n *    import withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\n *    export default withDragAndDrop(Calendar)\n * ```\n * (you can optionally pass any dnd backend as an optional second argument to `withDragAndDrop`.\n * It defaults to `react-dnd-html5-backend` which you should probably include in\n * your project if using this default).\n *\n * Set `resizable` to true in your calendar if you want events to be resizable.\n *\n * The HOC adds `onEventDrop` and `onEventResize` callback properties if the events are\n * moved or resized. They are called with these signatures:\n *\n * ```js\n *    function onEventDrop({ event, start, end, allDay }) {...}\n *    function onEventResize(type, { event, start, end, allDay }) {...}  // type is always 'drop'\n * ```\n *\n * Moving and resizing of events has some subtlety which one should be aware of.\n *\n * In some situations, non-allDay events are displayed in \"row\" format where they\n * are rendered horizontally. This is the case for ALL events in a month view. It\n * is also occurs with multi-day events in a day or week view (unless `showMultiDayTimes`\n * is set).\n *\n * When dropping or resizing non-allDay events into a the header area or when\n * resizing them horizontally because they are displayed in row format, their\n * times are preserved, only their date is changed.\n *\n * If you care about these corner cases, you can examine the `allDay` param suppled\n * in the callback to determine how the user dropped or resized the event.\n *\n * @param {*} Calendar\n * @param {*} backend\n */\n\n\nfunction withDragAndDrop(Calendar) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$backend = _ref.backend,\n      backend = _ref$backend === undefined ? html5Backend : _ref$backend;\n\n  var DragAndDropCalendar = function (_React$Component) {\n    _inherits(DragAndDropCalendar, _React$Component);\n\n    DragAndDropCalendar.prototype.getChildContext = function getChildContext() {\n      return {\n        onEventDrop: this.props.onEventDrop,\n        onEventResize: this.props.onEventResize,\n        components: this.props.components,\n        startAccessor: this.props.startAccessor,\n        endAccessor: this.props.endAccessor,\n        step: this.props.step,\n        draggableAccessor: this.props.draggableAccessor,\n        resizableAccessor: this.props.resizableAccessor\n      };\n    };\n\n    function DragAndDropCalendar() {\n      _classCallCheck(this, DragAndDropCalendar);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n      _this.handleStateChange = function () {\n        var isDragging = !!_this.monitor.getItem();\n\n        if (isDragging !== _this.state.isDragging) {\n          setTimeout(function () {\n            return _this.setState({\n              isDragging: isDragging\n            });\n          });\n        }\n      };\n\n      _this.state = {\n        isDragging: false\n      };\n      return _this;\n    }\n\n    DragAndDropCalendar.prototype.componentWillMount = function componentWillMount() {\n      var monitor = this.context.dragDropManager.getMonitor();\n      this.monitor = monitor;\n      this.unsubscribeToStateChange = monitor.subscribeToStateChange(this.handleStateChange);\n    };\n\n    DragAndDropCalendar.prototype.componentWillUnmount = function componentWillUnmount() {\n      this.monitor = null;\n      this.unsubscribeToStateChange();\n    };\n\n    DragAndDropCalendar.prototype.render = function render() {\n      var _props = this.props,\n          selectable = _props.selectable,\n          components = _props.components,\n          props = _objectWithoutProperties(_props, ['selectable', 'components']);\n\n      delete props.onEventDrop;\n      delete props.onEventResize;\n      props.selectable = selectable ? 'ignoreEvents' : false;\n      props.className = (0, _classnames2.default)(props.className, 'rbc-addons-dnd', this.state.isDragging && 'rbc-addons-dnd-is-dragging');\n      props.components = _extends({}, components, {\n        dateCellWrapper: _DropWrappers.DroppableDateCellWrapper,\n        dayWrapper: _DropWrappers.DroppableDayWrapper,\n        eventWrapper: _DraggableEventWrapper2.default\n      });\n      return _react2.default.createElement(Calendar, props);\n    };\n\n    return DragAndDropCalendar;\n  }(_react2.default.Component);\n\n  DragAndDropCalendar.propTypes = {\n    onEventDrop: _propTypes2.default.func,\n    onEventResize: _propTypes2.default.func,\n    startAccessor: _propTypes3.accessor,\n    endAccessor: _propTypes3.accessor,\n    allDayAccessor: _propTypes3.accessor,\n    draggableAccessor: _propTypes3.accessor,\n    resizableAccessor: _propTypes3.accessor,\n    selectable: _propTypes2.default.oneOf([true, false, 'ignoreEvents']),\n    resizable: _propTypes2.default.bool,\n    components: _propTypes2.default.object,\n    step: _propTypes2.default.number\n  };\n  DragAndDropCalendar.defaultProps = {\n    // TODO: pick these up from Calendar.defaultProps\n    components: {},\n    startAccessor: 'start',\n    endAccessor: 'end',\n    allDayAccessor: 'allDay',\n    draggableAccessor: null,\n    resizableAccessor: null,\n    step: 30\n  };\n  DragAndDropCalendar.contextTypes = {\n    dragDropManager: _propTypes2.default.object\n  };\n  DragAndDropCalendar.childContextTypes = {\n    onEventDrop: _propTypes2.default.func,\n    onEventResize: _propTypes2.default.func,\n    components: _propTypes2.default.object,\n    startAccessor: _propTypes3.accessor,\n    endAccessor: _propTypes3.accessor,\n    draggableAccessor: _propTypes3.accessor,\n    resizableAccessor: _propTypes3.accessor,\n    step: _propTypes2.default.number\n  };\n\n  if (backend === false) {\n    return DragAndDropCalendar;\n  } else {\n    return (0, _reactDnd.DragDropContext)(backend)(DragAndDropCalendar);\n  }\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}